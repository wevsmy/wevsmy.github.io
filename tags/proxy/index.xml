<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>proxy on </title>
    <link>https://blog.weii.ink/tags/proxy/</link>
    <description>Recent content in proxy on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 09 Oct 2019 10:47:49 +0800</lastBuildDate>
    
	<atom:link href="https://blog.weii.ink/tags/proxy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>go代理设置</title>
      <link>https://blog.weii.ink/2019/10/09/goproxy/</link>
      <pubDate>Wed, 09 Oct 2019 10:47:49 +0800</pubDate>
      
      <guid>https://blog.weii.ink/2019/10/09/goproxy/</guid>
      <description>&lt;p&gt;由于国内墙的存在go get经常失败，记录安装依赖时go代理设置&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>配置nginx反向代理使Docker采用域名远程访问API</title>
      <link>https://blog.weii.ink/2019/09/12/docker_use_domain_name/</link>
      <pubDate>Thu, 12 Sep 2019 10:00:57 +0800</pubDate>
      
      <guid>https://blog.weii.ink/2019/09/12/docker_use_domain_name/</guid>
      <description>&lt;p&gt;配置过docker开启2376采用远程访问，挺方便的，但是需要在服务器防火请放开2376端口（这是废话）
配置个nginx反向代理，直接采用域名443代理访问&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>portainer使用nginx-proxy配置代理添加证书</title>
      <link>https://blog.weii.ink/2019/09/11/nginx_proxy-portainer/</link>
      <pubDate>Wed, 11 Sep 2019 13:31:41 +0800</pubDate>
      
      <guid>https://blog.weii.ink/2019/09/11/nginx_proxy-portainer/</guid>
      <description>&lt;p&gt;nginx-proxy设置一个运行nginx和docker-gen的容器。docker-gen为nginx生成反向代理配置，并在启动和停止容器时重新加载nginx。
使用nginx-proxy来反向代理portainer，并且使用&lt;code&gt;https&lt;/code&gt;域名加密访问。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>